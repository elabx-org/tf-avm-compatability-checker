name: Check Terraform Azure Provider Version Compatibility

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check-provider-versions:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        terraform_version: ['1.0.0']
        azurerm_version: ['4.0.0', '4.3.3']

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ matrix.terraform_version }}

    - name: Create Terraform configuration
      run: |
        cat << EOF > main.tf
        terraform {
          required_providers {
            azurerm = {
              source  = "hashicorp/azurerm"
              version = "${{ matrix.azurerm_version }}"
            }
          }
        }

        module "storage_account" {
          source  = "Azure/avm-res-keyvault-vault/azurerm"
          version = "0.9.1"  # You might want to specify a version
          
          # Add any required variables here
          # For example:
          # resource_group_name = "example-rg"
          # location            = "eastus"
          # name                = "examplestorage"
        }
        EOF

    - name: Terraform Init
      run: terraform init
      continue-on-error: true
      id: tf_init

    - name: Check Terraform Init Result
      run: |
        if [ "${{ steps.tf_init.outcome }}" == "success" ]; then
          echo "Terraform init succeeded with azurerm provider version ${{ matrix.azurerm_version }}"
        else
          echo "Terraform init failed with azurerm provider version ${{ matrix.azurerm_version }}"
          exit 1
        fi
